namespace Age.Vulkan.Native.Flags;

/// <summary>
/// Bitmask specifying additional parameters of an image.
/// <para>When VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT is included in a pipeline, it forms a framebuffer-local memory dependency for each fragment generated by draw commands for that pipeline with the following scopes:</para>
/// <list type="bullet">
/// <item>The first synchronization scope includes the VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT pipeline stage executed by all previous fragments (as defined by primitive order) in the corresponding framebuffer regions including those generated by the same draw command.</item>
/// <item>The second synchronization scope includes the VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT pipeline stage executed by the generated fragment.</item>
/// <item>The first access scope includes all writes to color attachments.</item>
/// <item>The second access scope includes all reads from input attachments.</item>
/// </list>
/// </summary>
/// <remarks>Provided by VK_EXT_rasterization_order_attachment_access</remarks>
[Flags]
public enum VkPipelineColorBlendStateCreateFlagBits
{
    /// <summary>
    /// Indicates that access to color and input attachments will have implicit framebuffer-local memory dependencies, allowing applications to express custom blending operations in a fragment shader.
    /// </summary>
    /// <remarks>Provided by VK_EXT_rasterization_order_attachment_access</remarks>
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT = 0x00000001,

    /// <inheritdoc cref="VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT" />
    /// <remarks>Provided by VK_ARM_rasterization_order_attachment_access</remarks>
    VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM = VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT,
}
